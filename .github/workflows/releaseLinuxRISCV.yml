name: "Elf/RISC-V "

env:
  BUILD_TYPE: Release

on:
  workflow_run:
    workflows: ["Elf/ARM "]
    types:
      - completed

jobs:
  build-linux-riscv:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: main

    - name: Install cross-compilation toolchain
      run: sudo apt-get update -y; sudo apt-get install -y riscv64-linux-gnu-gcc riscv64-linux-gnu-g++

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/Binaries/Linux-RISC-V -DCMAKE_C_COMPILER=riscv64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=riscv64-linux-gnu-g++ -DCMAKE_AR=riscv64-linux-gnu-ar -DCMAKE_LINKER=riscv64-linux-gnu-ld -DCMAKE_OBJCOPY=riscv64-linux-gnu-objcopy -DCMAKE_RANLIB=riscv64-linux-gnu-ranlib

    - name: Build
      run: cmake --build ${{github.workspace}}/Binaries/Linux-RISC-V --config ${{env.BUILD_TYPE}}

    - name: Commit binary
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ${{github.workspace}}/Binaries/Linux-RISC-V/byteman
        git diff-index --quiet HEAD || git commit -am "Binaries" -a
        git push
